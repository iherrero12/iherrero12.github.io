<terminal>
    <div id="terminal" class="terminal"></div>
</terminal>

<style>
    .terminal {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        font-family: 'Fira Code', monospace;
        font-weight: 400;
        overflow: auto;
    }
    p {
        margin: 5rem;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
    // get the terminal object
    const terminal = document.getElementById("terminal");
    let commandPreview;
    let currentCommand = "";
    let inputLine;

    // Execute function when user releases a key on the keyboard
    document.addEventListener("keyup", function(event) {
        const validKeys = /^[a-zA-Z\s]$/;

        if (event.key === "Enter") {
            // Cancel the default action
            event.preventDefault();
            // Get command
            let command = commandPreview.textContent.trim();
            // Reset current command
            currentCommand = "";
            // Remove the command preview of the current line
            commandPreview.remove();

            // Process command
            if (commandOutputs[command]) {
                printToTerminal(command, commandOutputs[command]);
            } else if (restrictedCommands.includes(command)) {
                printToTerminal(command, `<p style="margin:0">You have no permission to run this command.</p>`);
            } else if (command === "") {
                printToTerminal(command, ``);
            } else {
                printToTerminal(command, `<p style="margin:0">Command not found.</p>`);
            }
            
            // Create new CommandPreview object
            commandPreview = document.createElement("span");
            commandPreview.id = "commandPreview"

            // Create new command input line
            inputLine = document.createElement("div");
            inputLine.innerHTML = `<p style="margin: 0;"><span style="color: rgb(255, 170, 0); font-weight: 600;text-shadow: 1px 1px 5px rgb(232, 122, 37);">iherrero@webpage</span> ~ </p>`;
            inputLine.firstChild.appendChild(commandPreview)
            terminal.appendChild(inputLine);

            // Scroll terminal
            terminal.scrollTop = terminal.scrollHeight;
        } else if (event.key === "Backspace") {
            currentCommand = currentCommand.slice(0, -1);
        } else if (validKeys.test(event.key) && currentCommand.length < 20) {
            currentCommand += event.key;
        }
        // 
        commandPreview.textContent = currentCommand;
    });

    // Función para mostrar el comando y la salida en el terminal
    function printToTerminal(command, output) {
        
        let finalCommand = document.createElement("span");
        finalCommand.textContent = command;
        inputLine.firstChild.appendChild(finalCommand);

        if (output) {
            const outputLine = document.createElement("div");
            outputLine.innerHTML = output;
            terminal.appendChild(outputLine);
        }
    }

    // Agregar la primera línea de user input

    commandPreview = document.createElement("span");
    commandPreview.id = "commandPreview"
    
    inputLine = document.createElement("div");
    inputLine.innerHTML = `<p style="margin: 0;"><span style="color: rgb(255, 170, 0); font-weight: 600;text-shadow: 1px 1px 5px rgb(232, 122, 37);">iherrero@webpage</span> ~ </p>`;
    inputLine.firstChild.appendChild(commandPreview);
    terminal.appendChild(inputLine);

    const restrictedCommands = ["ls", "cd", "nano", "vi"]

    const commandOutputs = {
        "pwd": `<p style="margin:0">/home/iherrero/</p>`,
        "uname": `<p style="margin:0">herrerOS</p>`,
        "whoami": `
        <div style="display: flex; flex-direction: column; justify-content: center; align-items: center;">
            <img style="max-width: 50%;" src="../../img/profile_pic.png" alt="Profile Picture of Iñigo Herrero">
            <p>IÑIGO HERRERO</p>
            <span>Hi! I am a developer based on Andoain, Spain.</span>
        </div>
        `,
        "help": `<p style="margin:0">Available commands:</br>pwd</br>uname</p>`
    };

    printToTerminal("whoami", commandOutputs["whoami"]);

});
</script>